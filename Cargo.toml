[package]
name = "websocket"
version = "0.1.0"
authors = ["dmitryk-dk <kozlovdmitriyy@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
js-sys = "0.3.45"
serde = {version="1.0.115", features = ["derive"]}
serde_json = "1.0"
jsonrpc-core = "14.2.0"
jsonrpc-core-client = "14.2.0"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies.wasm-bindgen]
version = "0.2.68"
features = ["serde-serialize"]

[dependencies.web-sys]
version = "0.3.45"
features = [
    "Document",
    "Window",
    "console",
    "BinaryType",
    "Blob",
    "ErrorEvent",
    "MessageEvent",
    "WebSocket",
    "CloseEvent",
    "Event",
    "EventTarget",
    "ProgressEvent",
    "FileReader"
]

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
